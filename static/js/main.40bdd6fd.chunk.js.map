{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRemove","bind","assertThisInitialized","toggleForm","handleChange","handleUpdate","handleToggle","state","isEditing","task","removeTodo","id","evt","setState","defineProperty","target","name","value","toggleTodo","preventDefault","updateTodo","result","react_default","a","createElement","CSSTransition","key","timeout","classNames","className","onSubmit","type","onChange","onClick","TransitionGroup","completed","class","Component","NewTodoForm","handleSubmit","createTodo","objectSpread","uuid","htmlFor","placeholder","TodoList","todos","create","remove","update","toggleCompletion","newTodo","concat","toConsumableArray","updatedTodo","updatedTodos","map","item","filter","_this2","src_Todo_0","src_NewTodoForm_0","App","src_TodoList_0","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.40bdd6fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.state = {\r\n      isEditing: false,\r\n      task: this.props.task,\r\n    };\r\n  }\r\n  handleRemove() {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  }\r\n\r\n  handleToggle(evt) {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n  handleUpdate(evt) {\r\n    evt.preventDefault();\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState({\r\n      isEditing: false,\r\n    });\r\n  }\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <CSSTransition key=\"editing\" timeout={500} classNames=\"form\">\r\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"task\"\r\n              value={this.state.task}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        </CSSTransition>\r\n      );\r\n    } else {\r\n      result = (\r\n        <CSSTransition key=\"normal\" timeout={500} classNames=\"task-text\">\r\n          <li className=\"Todo-task\" onClick={this.handleToggle}>\r\n            {this.props.task}\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <TransitionGroup\r\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\r\n      >\r\n        {result}\r\n        <div className=\"Todo-buttons\">\r\n          <button onClick={this.toggleForm}>\r\n            <i class=\"fas fa-pen\" />\r\n          </button>\r\n          <button onClick={this.handleRemove}>\r\n            <i class=\"fas fa-trash\" />\r\n          </button>\r\n        </div>\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid/dist/v4\";\r\nimport \"./NewTodoForm.css\";\r\n\r\nclass NewTodoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.createTodo({ ...this.state, id: uuid(), completed: false });\r\n    this.setState({ task: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"task\">New Todo</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Todo\"\r\n          id=\"task\"\r\n          name=\"task\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button>Add new todo</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTodoForm;\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport \"./TodoList.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    this.create = this.create.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.toggleCompletion = this.toggleCompletion.bind(this);\r\n  }\r\n\r\n  create(newTodo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo],\r\n    });\r\n  }\r\n\r\n  update(id, updatedTodo) {\r\n    const updatedTodos = this.state.todos.map((item) => {\r\n      if (item.id === id) {\r\n        return { ...item, task: updatedTodo };\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({\r\n      todos: updatedTodos,\r\n    });\r\n  }\r\n\r\n  toggleCompletion(id) {\r\n    const updatedTodos = this.state.todos.map((item) => {\r\n      if (item.id === id) {\r\n        return { ...item, completed: !item.completed };\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({\r\n      todos: updatedTodos,\r\n    });\r\n  }\r\n\r\n  remove(id) {\r\n    this.setState({\r\n      todos: this.state.todos.filter((item) => item.id !== id),\r\n    });\r\n  }\r\n  render() {\r\n    const todos = this.state.todos.map((item) => {\r\n      return (\r\n        <CSSTransition key={item.id} timeout={500} classNames=\"todo\">\r\n          <Todo\r\n            key={item.id}\r\n            id={item.id}\r\n            task={item.task}\r\n            removeTodo={this.remove}\r\n            updateTodo={this.update}\r\n            completed={item.completed}\r\n            toggleTodo={this.toggleCompletion}\r\n          />\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TodoList\">\r\n        <h1>\r\n          Todo List! <span>A Simple React Todo List App</span>\r\n        </h1>\r\n        <NewTodoForm createTodo={this.create} />\r\n        <ul>\r\n          <TransitionGroup className=\"todo-list\">{todos}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}